{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","helpers.jsx","components/ControlPresupuesto.jsx","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actuaizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d189f83.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => (\r\n\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n\r\n);\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error'\r\n\r\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actuaizarPregunta }) => {\r\n\r\n    // Definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n\r\n        guardarCantidad(parseInt(e.target.value,10));\r\n\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if (cantidad < 1 || isNaN(cantidad)) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // Si se pasa la validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actuaizarPregunta(false);\r\n\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actuaizarPregunta: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pregunta;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport Error from './Error';\r\n\r\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\r\n  const [nombre, guardarNombre] = useState(\"\");\r\n  const [cantidad, guardarCantidad] = useState(0);\r\n  const [error, guardarError] = useState(false);\r\n\r\n  // Cuando el usuario agrega un gasto\r\n  const agregarGasto = e => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\") {\r\n      guardarError(true);\r\n      return;\r\n    }\r\n\r\n    guardarError(false);\r\n\r\n    // Construir gasto\r\n    const gasto = {\r\n      nombre,\r\n      cantidad,\r\n      id: shortid.generate()\r\n    };\r\n\r\n    // Pasar el gasto al componente principal\r\n    guardarGasto(gasto);\r\n    guardarCrearGasto(true);\r\n\r\n    // Resetear el form\r\n    guardarNombre('');\r\n    guardarCantidad(0);\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={agregarGasto}>\r\n      <h2>Agrega tus gastos</h2>\r\n\r\n      {error ? (\r\n        <Error mensaje=\"Ambos campos son obligatorios o presupuesto incorrecto\" />\r\n      ) : null}\r\n\r\n      <div className=\"campo\">\r\n        <label>Nombre Gasto</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Ej. Transporte\"\r\n          value={nombre}\r\n          onChange={e => guardarNombre(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"campo\">\r\n        <label>Cantidad Gasto</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Ej. 300\"\r\n          value={cantidad}\r\n          onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"submit\"\r\n        className=\"u-full-width button-primary\"\r\n        value=\"Agregar Gasto\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  guardarGasto: PropTypes.func.isRequired,\r\n  guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Gasto = ({gasto}) => {\r\n    return ( \r\n        <li className=\"gastos\">\r\n            <p>\r\n                {gasto.nombre}\r\n                <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n            </p>\r\n        </li>\r\n     );\r\n}\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => {\r\n    return ( \r\n        <div className=\"gastos-realizados\">\r\n            <h2>Listado</h2>\r\n            {gastos.map(gasto => (\r\n                <Gasto \r\n                    key={gasto.id}\r\n                    gasto={gasto}\r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n\r\n    let clase;\r\n\r\n    if (presupuesto / 4 > restante) {\r\n        clase = 'alert alert-danger';\r\n    }else if (presupuesto / 2 > restante) {\r\n        clase = 'alert alert-warning';\r\n    }else{\r\n        clase = 'alert alert-success'\r\n    }\r\n\r\n    return clase;\r\n\r\n}","import React,{Fragment} from 'react';\r\nimport { revisarPresupuesto } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto,restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarPregunta, actuaizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n\n  // useEffect que actualiza el restante\n  useEffect(() => {\n    if (crearGasto) {\n      \n      // Agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      // Restar del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // Resetear a false\n      guardarCrearGasto(false);\n    }\n  }, [crearGasto, gasto, gastos, restante])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actuaizarPregunta={actuaizarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado gastos={gastos} />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}